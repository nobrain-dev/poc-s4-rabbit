framework:
    messenger:
        # Uncomment this (and the failed transport below) to send failed messages to this transport for later handling.
        # failure_transport: failed

        transports:
            # https://symfony.com/doc/current/messenger.html#transport-configuration
            # async: '%env(MESSENGER_TRANSPORT_DSN)%'
            # failed: 'doctrine://default?queue_name=failed'
            # sync: 'sync://'

            async: '%env(MESSENGER_TRANSPORT_DSN)%'
            async_2: '%env(MESSENGER_TRANSPORT_DSN)%'

#            amqp_config_ref:
#                dsn: '%env(MESSENGER_TRANSPORT_DSN)%'
#                options:
#                    auto_setup: Enable or not the auto-setup of queues and exchanges (Default: true)
#                    auto_setup: Enable or not the auto-setup of queues and exchanges (Default: true)
#                    prefetch_count: set channel prefetch count
#                    exchange:
#                        name: name_of_exchange_ex
#                        type: fanout   #  <-- fanout is default value. values (fanout, direct, topic, header)
#                        default_publish_routing_key:     # Routing key to use when publishing, if none is specified on the message
#                        flags: # Exchange flags (Default: AMQP_DURABLE)
#                        arguments: # Extra arguments  ????????
#                            x-dead-letter-exchange: 'dead-exchange'
#                            x_message_ttl: 100
#                            x_delay: 100
#                            x_expires: 150
#                            x-max-length: 200
#                            x-max-length-bytes: 300
#                            x-max-priority: 4
#                    queue:
#                        name: image_resize_qu
#                        binding_keys: # The binding keys (if any) to bind to this queue
#                        flags: # Queue flags (Default: AMQP_DURABLE)
#                        arguments: # Extra arguments
#                    delay:
#                        queue_name_pattern: Pattern to use to create the queues (Default: "delay_%exchange_name%_%routing_key%_%delay%")
#                        exchange_name: Name of the exchange to be used for the delayed/retried messages (Default: "delays")



            # TOPIC EXAMPLE

#            async_priority_normal:
#                dsn: "%env(MESSENGER_TRANSPORT_DSN)%"
#                options:
#                    exchange:
#                        name: normal
#                        type: topic
#                        default_publish_routing_key: normal
#                    queues:
#                        normal:
#                            binding_keys: [ normal ]


            amqp_image_resize:
                dsn: '%env(MESSENGER_TRANSPORT_DSN)%'
                options:
                    exchange:
                        name: image_resize_ex
                        type: fanout   #  <-- fanout is default value
                    queue:
                        name: image_resize_qu


            ms1_integration_out:
                dsn: '%env(MESSENGER_TRANSPORT_DSN)%'
                options:
                    exchange:
                        name: ms1_integration_out_ex
                        type: topic
                    queue:
                        name: ms1_integration_out_qu


            ms2_integration_out:
                dsn: '%env(MESSENGER_TRANSPORT_DSN)%'
                options:
                    exchange:
                        name: ms2_integration_out_ex
                        type: topic
                    queue:
                        name: ms2_integration_out_qu


            msxxx_integration_in:
                dsn: '%env(MESSENGER_TRANSPORT_DSN)%'
                options:
#
#                        name: ms2_integration_out_ex
#                        type: topic
                    queue:
                        name: msxxxx_integration_in_qu
                        binding_keys:
                            - ''

        routing:
            # Route your messages to the transports
            # 'App\Message\YourMessage': async

            'App\Message\FooMessage': [async, async_2]
            'App\Message\BarMessage': [amqp_image_resize]
