old_sound_rabbit_mq:
#    connections:
#        default:
#            url: '%env(RABBITMQ_URL)%'
#    producers:
#        # use 'old_sound_rabbit_mq.task_producer' service to send data.
#        task:
#            connection:       default
#            exchange_options: { name: 'task', type: direct }
#    consumers:
#        task:
#            connection:       default
#            exchange_options: { name: 'task', type: direct }
#            queue_options:    { name: 'task'}
#            callback:         App\Consumer\TaskConsumer


    producers:

        order_create:
            connection:       default
            exchange_options: { name: 'order_create_ex', type: fanout }

        blu_outcoming_event:
            connection:       default
            exchange_options: { name: 'blu_outcoming_event_ex', type: topic  }
            #service_alias:    my_app_service # no alias by default
            #class: My\Custom\Producer
            #class: BluMS\Infrastructure\Integration\Outcoming\OutcomingEventProducer


    consumers:

        order_create_1:
            connection:       default
            exchange_options: { name: 'order_create_ex', type: fanout }
            queue_options:    { name: 'order_create_1_qu' }
            callback:         application_frontend.consumer.order_create_1

        order_create_2:
            connection:       default
            exchange_options: { name: 'order_create_ex', type: fanout }
            queue_options:    { name: 'order_create_2_qu' }
            callback:         application_frontend.consumer.order_create_2

        blu_incoming_event:
            connection:       default
            exchange_options: { name: 'green_outcoming_event_ex', type: topic }
            queue_options:
                name: 'blu_incoming_event_qu'
                routing_keys:
                    - 'green.*'
                    #- 'audi.*'
                    #- '#.mercedes.*'
            #callback: green_acl.consumer.incoming_event
            callback:         application_frontend.consumer.order_create_2

    multiple_consumers:
        upload:
            connection:       default
    #        exchange_options: {name: 'upload', type: direct}
            queues_provider: queues_provider_service
            queues:
                upload-picture:
                    name:     upload_picture
                    callback: application_frontend.consumer.order_create_2
                    routing_keys:
                        - picture
                upload-video:
                    name:     upload_video
                    callback: application_frontend.consumer.order_create_2
                    routing_keys:
                        - video
                upload-stats:
                    name:     upload_stats
                    callback: application_frontend.consumer.order_create_2