# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
#    App\:
#        resource: '../src/*'
#        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    BluMS\Infrastructure\UI\Web\Controller\:
        resource: '../../UI/Web/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    BluMS\Infrastructure\UI\Cli\Command\:
        resource: '../../UI/Cli/Command'
        tags: ['console.command']






    BluMS\Infrastructure\UI\Cli\Command\OrderGeneratorCommand:
        arguments:
            - '@old_sound_rabbit_mq.order_create_producer'

    BluMS\Infrastructure\UI\Cli\Command\BluObjectMessageCommand:
        arguments:
            #- '@old_sound_rabbit_mq.blu_outcoming_event_producer'

            - '@BluMS\Infrastructure\Integration\Outcoming\OutcomingEventProducer'



    application_frontend.consumer.order_create_1:
        class: BluMS\Infrastructure\ACL\Consumer\OrderCreate1Consumer
        arguments:
            #- '@doctrine.orm.entity_manager'
            - '@logger'

    application_frontend.consumer.order_create_2:
        class: BluMS\Infrastructure\ACL\Consumer\OrderCreate1Consumer
        arguments:
            #- '@doctrine.orm.entity_manager'
            - '@logger'


    BluMS\Infrastructure\Integration\Outcoming\OutcomingEventProducer:
        arguments:
            - '@old_sound_rabbit_mq.blu_outcoming_event_producer'
        public: true